---
- name: Install kubeadm worker-node-0
  hosts: worker-node-0
  become: true
  become_method: sudo
  tasks:
    - name: Update cache & Full system update
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true
    - name: Install apt-transport-https
      apt:
        pkg:  
          - apt-transport-https 
          - ca-certificates
          - curl
          - gpg
        update_cache: yes
    - name: Create dir keyrings
      shell: "mkdir -p -m 755 /etc/apt/keyrings"
      become: true
    - name: Add GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring:  /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: This overwrites any existing kubernetes.list
      shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
      become: true
    - name: Install kubeadm
      apt:
        pkg:  
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        update_cache: yes
      become: true
    - name: Hold ver
      shell: "apt-mark hold kubelet kubeadm kubectl"
      become: true
    - name: Switch ip_forward
      shell: "modprobe br_netfilter | echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-arptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-ip6tables=1' >> /etc/sysctl.conf | sysctl -p /etc/sysctl.conf"
      changed_when: false
      ignore_errors: True

- name: Install kubeadm worker-node-1
  hosts: worker-node-1
  become: true
  become_method: sudo
  tasks:
    - name: Update cache & Full system update
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true
    - name: Install apt-transport-https
      apt:
        pkg:  
          - apt-transport-https 
          - ca-certificates
          - curl
          - gpg
        update_cache: yes
    - name: Create dir keyrings
      shell: "mkdir -p -m 755 /etc/apt/keyrings"
      become: true
    - name: Add GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring:  /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: This overwrites any existing kubernetes.list
      shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
      become: true
    - name: Install kubeadm
      apt:
        pkg:  
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        update_cache: yes
      become: true
    - name: Hold ver
      shell: "apt-mark hold kubelet kubeadm kubectl"
      become: true
    - name: Switch ip_forward
      shell: "modprobe br_netfilter | echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-arptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-ip6tables=1' >> /etc/sysctl.conf | sysctl -p /etc/sysctl.conf"
      changed_when: false
      ignore_errors: True 

- name: Install kubeadm worker-node-2
  hosts: worker-node-2
  become: true
  become_method: sudo
  tasks:
    - name: Update cache & Full system update
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true
    - name: Install apt-transport-https
      apt:
        pkg:  
          - apt-transport-https 
          - ca-certificates
          - curl
          - gpg
        update_cache: yes
    - name: Create dir keyrings
      shell: "mkdir -p -m 755 /etc/apt/keyrings"
      become: true
    - name: Add GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring:  /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: This overwrites any existing kubernetes.list
      shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
      become: true
    - name: Install kubeadm
      apt:
        pkg:  
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        update_cache: yes
      become: true
    - name: Hold ver
      shell: "apt-mark hold kubelet kubeadm kubectl"
      become: true
    - name: Switch ip_forward
      shell: "modprobe br_netfilter | echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-arptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-ip6tables=1' >> /etc/sysctl.conf | sysctl -p /etc/sysctl.conf"
      changed_when: false
      ignore_errors: True

- name: Install kubeadm worker-node-3
  hosts: worker-node-3
  become: true
  become_method: sudo
  tasks:
    - name: Update cache & Full system update
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true
    - name: Install apt-transport-https
      apt:
        pkg:  
          - apt-transport-https 
          - ca-certificates
          - curl
          - gpg
        update_cache: yes
    - name: Create dir keyrings
      shell: "mkdir -p -m 755 /etc/apt/keyrings"
      become: true
    - name: Add GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring:  /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: This overwrites any existing kubernetes.list
      shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
      become: true
    - name: Install kubeadm
      apt:
        pkg:  
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        update_cache: yes
      become: true
    - name: Hold ver
      shell: "apt-mark hold kubelet kubeadm kubectl"
      become: true
    - name: Switch ip_forward
      shell: "modprobe br_netfilter | echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-arptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-ip6tables=1' >> /etc/sysctl.conf | sysctl -p /etc/sysctl.conf"
      changed_when: false
      ignore_errors: True 

- name: Install kubeadm master-node-0
  hosts: master-node-0
  become: true
  become_method: sudo
  tasks:
    - name: Update cache & Full system update
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true
    - name: Install apt-transport-https
      apt:
        pkg:  
          - apt-transport-https 
          - ca-certificates
          - curl
          - gpg
        update_cache: yes
    - name: Create dir keyrings
      shell: "mkdir -p -m 755 /etc/apt/keyrings"
      become: true
    - name: Add GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        keyring:  /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: This overwrites any existing kubernetes.list
      shell: "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
      become: true
    - name: Install kubeadm
      apt:
        pkg:  
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        update_cache: yes
      become: true
    - name: Hold ver
      shell: "apt-mark hold kubelet kubeadm kubectl"
      become: true
    - name: Switch ip_forward
      shell: "modprobe br_netfilter | echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-arptables=1' >> /etc/sysctl.conf | echo 'net.bridge.bridge-nf-call-ip6tables=1' >> /etc/sysctl.conf | sysctl -p /etc/sysctl.conf"
      changed_when: false
      ignore_errors: True
    - name: Kubeadm init
      shell: "kubeadm init --apiserver-advertise-address={{ ansible_facts.eth0.ipv4.address }} --pod-network-cidr 10.0.1.0/24 --apiserver-cert-extra-sans={{ inventory_hostname }}"
      become: true
      register: kubeadm_result   #записываем результат в данную переменную
    - name: Kube config
      shell: 
        cmd: "mkdir -p ~/.kube"
    - name: Kube config1
      shell: "cp -i /etc/kubernetes/admin.conf ~/.kube/config | chown $(id -u):$(id -g) ~/.kube/config"
    - debug:
        var: kubeadm_result    # вывод записанного результата

